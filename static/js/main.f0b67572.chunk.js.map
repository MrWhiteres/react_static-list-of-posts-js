{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QAAGC,QAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SACGH,IAGF,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,QCdMG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,oBAAIH,UAAU,cAAd,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,6BACE,cAAC,EAAD,CAAaA,QAASA,KADfA,EAAQS,UCLVC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGP,UAAU,WAAWC,KAAI,iBAAYM,EAAKT,OAA7C,SACGS,EAAKV,SCAGW,EAAW,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,MAAOH,EAAlB,EAAkBA,KAAMR,EAAxB,EAAwBA,KAAMI,EAA9B,EAA8BA,SAA9B,OACtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGH,8BACG,eACAH,GAAQ,cAAC,EAAD,CAAUA,KAAMA,UAI7B,mBAAGP,UAAU,iBAAb,SACGD,IAGFI,EAASQ,OAAS,EACjB,cAAC,EAAD,CAAaR,SAAUA,IAEvB,qCACE,uBACA,mBAAG,UAAQ,oBAAX,oCCxBKS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,oBAAIb,UAAU,WAAd,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,6BACE,cAAC,EAAD,CAAUA,KAAMA,KADTA,EAAKJ,UCWb,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAXmBQ,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC3C,MAULZ,UAPuBe,EAOGT,EAAKJ,GANxBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAyBA,EALJH,KAeRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f0b67572.chunk.js","sourcesContent":["export const CommentInfo = ({ comment: { name, email, body } }) => (\r\n  <div className=\"CommentInfo\">\r\n    <div className=\"CommentInfo__title\">\r\n      <strong className=\"CommentInfo__name\">\r\n        {name}\r\n      </strong>\r\n\r\n      {' by '}\r\n\r\n      <a\r\n        className=\"CommentInfo__email\"\r\n        href={`mailto:${email}`}\r\n      >\r\n        {email}\r\n      </a>\r\n    </div>\r\n\r\n    <div className=\"CommentInfo__body\">\r\n      {body}\r\n    </div>\r\n  </div>\r\n);\r\n","import './CommentList.scss';\r\n\r\nimport { CommentInfo } from '../CommentInfo';\r\n\r\nexport const CommentList = ({ comments }) => (\r\n  <ul className=\"CommentList\">\r\n    {comments.map(comment => (\r\n      <li key={comment.id}>\r\n        <CommentInfo comment={comment} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\r\nimport { CommentList } from '../CommentList';\r\nimport { UserInfo } from '../UserInfo';\r\n\r\nexport const PostInfo = ({ post: { title, user, body, comments } }) => (\r\n  <div className=\"PostInfo\">\r\n    <div className=\"PostInfo__header\">\r\n      <h3 className=\"PostInfo__title\">\r\n        {title}\r\n      </h3>\r\n\r\n      <p>\r\n        {' Posted by  '}\r\n        {user && <UserInfo user={user} />}\r\n      </p>\r\n    </div>\r\n\r\n    <p className=\"PostInfo__body\">\r\n      {body}\r\n    </p>\r\n\r\n    {comments.length > 0 ? (\r\n      <CommentList comments={comments} />\r\n    ) : (\r\n      <>\r\n        <hr />\r\n        <b data-cy=\"NoCommentsMessage\">No comments yet</b>\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n","import { PostInfo } from '../PostInfo';\r\n\r\nexport const PostList = ({ posts }) => (\r\n  <ul className=\"PostList\">\r\n    {posts.map(post => (\r\n      <li key={post.id}>\r\n        <PostInfo post={post} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}